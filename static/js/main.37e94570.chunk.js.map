{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","App.js","index.js"],"names":["module","exports","Notification","message","className","css","notification","Statistics","good","neutral","bad","total","positivePercentage","statistics","list","FeedbackOptions","options","onLeaveFeedback","map","option","type","name","onClick","button","Section","title","children","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","state","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,KAAO,2B,iBCAvGD,EAAOC,QAAU,CAAC,aAAe,qC,gBCAjCD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,MAAQ,yB,6HCMXC,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,qBAAKC,UAAWC,IAAIC,aAApB,SAAmCH,K,gBCiB7BI,EAjBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,sBAAKR,UAAWC,IAAIQ,WAApB,UACGF,EAAQ,GACP,qBAAIP,UAAWC,IAAIS,KAAnB,UACE,wCAAWN,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WAGFD,GAAS,cAAC,EAAD,CAAcR,QAAQ,0B,gBCKxBY,EAlBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,KAAK,SAELC,KAAMF,EACNG,QAASL,EACTb,UAAWC,IAAIkB,OALjB,SAOGJ,GALIA,S,gBCGAK,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACGD,GAAS,oBAAIrB,UAAWC,IAAIoB,MAAnB,SAA2BA,IACpCC,MCoDQC,MArDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOpB,EAAP,KAAaqB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBqB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOlB,EAAP,KAAYqB,EAAZ,KAqBMC,EAAqB,WACzB,OAAOxB,EAAOC,EAAUC,GAS1B,OACE,gCACE,cAAC,EAAD,CAASe,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBT,QALP,CAAC,OAAQ,UAAW,OAKKC,gBAhCjB,SAAAgB,GAGtB,OAFeA,EAAEC,OAAOb,MAGtB,IAAK,OACHQ,GAAQ,SAAAM,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,UACHL,GAAW,SAAAK,GAAK,OAAIA,EAAQ,KAC5B,MACF,IAAK,MACHJ,GAAO,SAAAI,GAAK,OAAIA,EAAQ,KACxB,MAEF,QACE,aAoBF,cAAC,EAAD,CAASV,MAAM,aAAf,SACE,cAAC,EAAD,CACEjB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,IACPpB,mBAjBCwB,KAAKC,MAAO7B,EAAOwB,IAAwB,a,MC9BtDM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.37e94570.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__bIyml\",\"title\":\"Statistics_title__2EapJ\",\"list\":\"Statistics_list__1PRTm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1zuT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__GRhDY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__ffqrv\"};","import PropTypes from \"prop-types\";\r\nimport css from \"../Notification/Notification.module.css\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <div className={css.notification}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\nimport css from '../Statistics/Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div className={css.statistics}>\r\n      {total > 0 && (\r\n        <ul className={css.list}>\r\n          <li>Good: {good}</li>\r\n          <li>Neutral: {neutral}</li>\r\n          <li>Bad: {bad}</li>\r\n          <li>Total: {total}</li>\r\n          <li>Positive feedback: {positivePercentage}%</li>\r\n        </ul>\r\n      )}\r\n      {!total && <Notification message=\"No feedback given\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport css from '../FeedbackOptions/FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button\r\n          type=\"button\"\r\n          key={option}\r\n          name={option}\r\n          onClick={onLeaveFeedback}\r\n          className={css.button}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport css from \"../Section/Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      {title && <h1 className={css.title}>{title}</h1>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import { useState } from 'react';\n\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleIncrement = e => {\n    const option = e.target.name;\n\n    switch (option) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round((good / countTotalFeedback()) * 100);\n  };\n\n  const options = ['good', 'neutral', 'bad'];\n\n  return (\n    <div>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={options} onLeaveFeedback={handleIncrement} />\n      </Section>\n\n      <Section title=\"Statistics\">\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}